@model Infraestructure.Models.Usuario

@{
    ViewBag.Title = "Save";
    Layout = "~/Views/Login/_Login.cshtml";
}

@using (Html.BeginForm("Save", "Login", FormMethod.Post))
{
    @Html.AntiForgeryToken()
    
  
        <h4>Registrarse</h4>
        
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
       

        <div class="form-group">
            <div class="form-floating">
                @Html.EditorFor(model => model.Nombre, new { htmlAttributes = new { @class = "form-control" } })
                <label for="floatingEmail">Nombre</label>
                <div>
                    <br />
                    @Html.ValidationMessageFor(model => model.Nombre, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="form-floating">
                @Html.EditorFor(model => model.Apellido, new { htmlAttributes = new { @class = "form-control" } })
                <label for="floatingEmail">Apellido</label>
                <div>
                    <br />
                    @Html.ValidationMessageFor(model => model.Apellido, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>


        <div class="form-group">
            <div class="form-floating">
                @Html.EditorFor(model => model.Ubicacion, new { htmlAttributes = new { @class = "form-control" } })
                <label for="floatingEmail">Ubicación</label>
                <div>
                    <br />
                    @Html.ValidationMessageFor(model => model.Ubicacion, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="form-floating">
                @Html.EditorFor(model => model.Correo, new { htmlAttributes = new { @class = "form-control" } })
                <label for="floatingEmail">Correo</label>
                <div>
                    <br />
                    @Html.ValidationMessageFor(model => model.Correo, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="form-floating">
                @Html.PasswordFor(x => x.Clave, new { @class = "form-control", id = "floatingPassword" })
                <label for="floatingEmail">Clave</label>
                <div>
                    <br />
                    @Html.ValidationMessageFor(x => x.Clave, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <br/>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Registrarse" class="btn btn-primary" />
            </div>
        </div>
        <br/>
    
}

<div class="form-group">
    @Html.ActionLink("Atrás", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
